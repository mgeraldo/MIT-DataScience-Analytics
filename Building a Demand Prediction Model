{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyNZza95dLrmVwEueuZ2EWfN"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["# Assignment 11.1: Building a Demand Prediction Model\n","## Marcos Geraldo\n","\n","A major amusement park seeks to optimize revenues for a specific souvenir they sell year-round. The organization seeks a prediction model that can guide them as to what price to set for the souvenir at a specific time. They are hoping this will help maximize their revenues.  \n","\n","The goal is to develop a demand predication model and an optimization model to determine optimal pricing for the next two months (weeks 157–164) to maximize revenue. Another goal is to generate a plot showing projected prices per week. To accomplish this task, the data science team for the amusement park took historical data on weekly prices and sales for the last three years and developed a linear additive demand model. The model includes both time and seasonal components. The dataset spanned three years (156 weeks): The training dataset used weeks 1–104 (years one and two), and the testing dataset used weeks 105–156 (year three).  \n","\n","Incorporate the following business rules into your model:  \n","\n","Ladder for prices: Prices must be chosen from the following discrete “price ladder”:  \n","-\\$1.00  \n","-\\$0.95  \n","-\\$0.85  \n","-\\$0.75  \n","-\\$0.60  \n","-\\$0.50  \n","Note: While Professor Rob Freund introduces three business rules, for the purpose of this assignment we're going to focus on building a model based on only the ladder pricing rule."],"metadata":{"id":"kGbycZYprbM0"}},{"cell_type":"markdown","source":["Adjust the copied code using the provided information below to accomplish the assignment goals.\n","\n","𝑑_𝑡 = 1.978242858 -2.809634145 *𝑝_𝑡 + 0.963410728*𝑝_(𝑡−1) + 0.759639170*𝑝_(𝑡−2)   \n","-0.562046910 *𝑆𝑒𝑎𝑠𝑜𝑛2 +   \n","0.087545274 *𝑆𝑒𝑎𝑠𝑜𝑛3 +  \n","-0.402637480 *𝑆𝑒𝑎𝑠𝑜𝑛4 +  \n","-0.027326010 *𝑆𝑒𝑎𝑠𝑜𝑛5 +  \n"," 0.004349885 *𝑆𝑒𝑎𝑠𝑜𝑛6 +   \n","-0.036102297 *𝑆𝑒𝑎𝑠𝑜𝑛7 +  \n","-0.069280527 *𝑆𝑒𝑎𝑠𝑜𝑛8 +  \n"," 0.160276197 *𝑆𝑒𝑎𝑠𝑜𝑛9 +  \n"," 1.104208897 *𝑆𝑒𝑎𝑠𝑜𝑛10 +  \n"," 1.122711287 *𝑆𝑒𝑎𝑠𝑜𝑛11 +  \n"," 1.176802194 *𝑆𝑒𝑎𝑠𝑜𝑛12 +  \n"," 0.947945548 *𝑆𝑒𝑎𝑠𝑜𝑛13   \n","\n","Please note: Week 164 does not need to be in the output of predicted prices."],"metadata":{"id":"mguyibml-DRQ"}},{"cell_type":"code","execution_count":7,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"yEH2NvrsrKT0","executionInfo":{"status":"ok","timestamp":1695761879116,"user_tz":420,"elapsed":6667,"user":{"displayName":"Marcos Geraldo","userId":"04095741566103828065"}},"outputId":"f8dcff24-154f-47b2-f090-971327e65bff"},"outputs":[{"output_type":"stream","name":"stdout","text":["Collecting gurobipy\n","  Downloading gurobipy-10.0.3-cp310-cp310-manylinux2014_x86_64.whl (12.7 MB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m12.7/12.7 MB\u001b[0m \u001b[31m22.9 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hInstalling collected packages: gurobipy\n","Successfully installed gurobipy-10.0.3\n"]}],"source":["!pip install gurobipy"]},{"cell_type":"code","source":["import numpy as np\n","import pandas as pd\n","import gurobipy as gp\n","from gurobipy import GRB\n","import plotly.express as px"],"metadata":{"id":"2Jad_NvYrMlq","executionInfo":{"status":"ok","timestamp":1695761879501,"user_tz":420,"elapsed":403,"user":{"displayName":"Marcos Geraldo","userId":"04095741566103828065"}}},"execution_count":8,"outputs":[]},{"cell_type":"code","source":["#define the weeks for the model\n","weeks = list(range(157,165))\n","w1 = weeks[0]\n","w2 = weeks[1]"],"metadata":{"id":"k3-wImh69WUg","executionInfo":{"status":"ok","timestamp":1695761879501,"user_tz":420,"elapsed":11,"user":{"displayName":"Marcos Geraldo","userId":"04095741566103828065"}}},"execution_count":9,"outputs":[]},{"cell_type":"code","source":["# Developed linear demand model: used 1-104 weeks (2 years) for treaining; 105-156(1 year) for Testing\n","# Variable: 𝑆𝑒𝑎𝑠𝑜𝑛X. Year divided int 13 seasons / 4 weeks per season (categorical variable)\n","# Variable: Price,  at time 𝑝_𝑡, 𝑝_(𝑡−1), 𝑝_(𝑡−2)\n","\n","# Demand model parameters\n","intercept = 1.978242858\n","# causal factors\n","p_coeff = -2.809634145\n","p1_coeff = 0.963410728\n","p2_coeff =  0.759639170\n","# time series factor\n","season_coeff = {1: 0, 2: -0.562046910, 3: 0.087545274,  4: -0.402637480, 5: 0.004349885, 6: 0.004349885,\n","               7: -0.036102297, 8: -0.069280527, 9: 0.160276197, 10: 1.104208897, 11: 1.122711287, 12: 1.176802194, 13: 0.947945548}"],"metadata":{"id":"sQuyW5DWrPxJ","executionInfo":{"status":"ok","timestamp":1695761879502,"user_tz":420,"elapsed":12,"user":{"displayName":"Marcos Geraldo","userId":"04095741566103828065"}}},"execution_count":10,"outputs":[]},{"cell_type":"code","source":["#create the dictionary for seasons\n","season = {}\n","for i in weeks:\n","    season[i] = np.ceil((i % 52) / 4 )\n","\n","#create a list for price ladder\n","p_ladder = [1.0, 0.95, 0.85, 0.75, 0.6, 0.5]\n","\n","# Create model object\n","mod2 = gp.Model (\"price_model_2\")\n","\n","# Define decision variables which includes ladder constraint\n","p = mod2.addVars(weeks)\n","x = mod2.addVars(weeks, p_ladder, vtype= GRB.BINARY)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"JwaC_jiABbbb","executionInfo":{"status":"ok","timestamp":1695761879502,"user_tz":420,"elapsed":12,"user":{"displayName":"Marcos Geraldo","userId":"04095741566103828065"}},"outputId":"d03e69bb-02f2-4f33-b41f-d1c146e552aa"},"execution_count":11,"outputs":[{"output_type":"stream","name":"stdout","text":["Restricted license - for non-production use only - expires 2024-10-28\n"]}]},{"cell_type":"code","source":["# Set objective function\n","obj_fn = mod2.setObjective(p[w1] * (intercept + p_coeff*p[w1] + p1_coeff*1 + p2_coeff*1 + season_coeff[season[w1]]) +\n","                           p[w2] * (intercept + p_coeff*p[w2] + p1_coeff*p[w1] + p2_coeff*1 + season_coeff[season[w2]]) +\n","                           sum(p[w] * (intercept + p_coeff*p[w] + p1_coeff*p[w-1] + p2_coeff*p[w-2] + season_coeff[season[w]]) for w in weeks[2:]),\n","                          GRB.MAXIMIZE)"],"metadata":{"id":"_g5Fr0ppBUjZ","executionInfo":{"status":"ok","timestamp":1695761883931,"user_tz":420,"elapsed":3,"user":{"displayName":"Marcos Geraldo","userId":"04095741566103828065"}}},"execution_count":12,"outputs":[]},{"cell_type":"code","source":["# Select price ladder value, which force to select only one value by week\n","constr_select_ladder = mod2.addConstrs(sum(x[w,k] for k in p_ladder) == 1 for w in weeks)\n","# Select price constraint that connect the price to each value of the price ladder.\n","constr_select_price = mod2.addConstrs(p[w] == sum(k * x[w,k] for k in p_ladder) for w in weeks)"],"metadata":{"id":"iyXomFrxGore","executionInfo":{"status":"ok","timestamp":1695761885990,"user_tz":420,"elapsed":3,"user":{"displayName":"Marcos Geraldo","userId":"04095741566103828065"}}},"execution_count":13,"outputs":[]},{"cell_type":"code","source":["mod2.optimize()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"g-WEC_dpGtDI","executionInfo":{"status":"ok","timestamp":1695761886921,"user_tz":420,"elapsed":534,"user":{"displayName":"Marcos Geraldo","userId":"04095741566103828065"}},"outputId":"f7187d8c-31fa-4666-d87f-623158cacdeb"},"execution_count":14,"outputs":[{"output_type":"stream","name":"stdout","text":["Gurobi Optimizer version 10.0.3 build v10.0.3rc0 (linux64)\n","\n","CPU model: Intel(R) Xeon(R) CPU @ 2.20GHz, instruction set [SSE2|AVX|AVX2]\n","Thread count: 1 physical cores, 2 logical processors, using up to 2 threads\n","\n","Optimize a model with 16 rows, 56 columns and 104 nonzeros\n","Model fingerprint: 0xfbc9a1f9\n","Model has 21 quadratic objective terms\n","Variable types: 8 continuous, 48 integer (48 binary)\n","Coefficient statistics:\n","  Matrix range     [5e-01, 1e+00]\n","  Objective range  [1e+00, 4e+00]\n","  QObjective range [2e+00, 6e+00]\n","  Bounds range     [1e+00, 1e+00]\n","  RHS range        [1e+00, 1e+00]\n","Found heuristic solution: objective 5.0955328\n","Presolve removed 0 rows and 8 columns\n","Presolve time: 0.00s\n","Presolved: 16 rows, 48 columns, 88 nonzeros\n","Presolved model has 21 quadratic objective terms\n","Variable types: 8 continuous, 40 integer (40 binary)\n","\n","Root relaxation: objective 6.242180e+00, 21 iterations, 0.00 seconds (0.00 work units)\n","\n","    Nodes    |    Current Node    |     Objective Bounds      |     Work\n"," Expl Unexpl |  Obj  Depth IntInf | Incumbent    BestBd   Gap | It/Node Time\n","\n","     0     0    6.24218    0    7    5.09553    6.24218  22.5%     -    0s\n","H    0     0                       6.0918861    6.24218  2.47%     -    0s\n","H    0     0                       6.1003056    6.24218  2.33%     -    0s\n","     0     0    6.24218    0    7    6.10031    6.24218  2.33%     -    0s\n","     0     0    6.24218    0    7    6.10031    6.24218  2.33%     -    0s\n","     0     0    6.24218    0    7    6.10031    6.24218  2.33%     -    0s\n","     0     0    6.24218    0    7    6.10031    6.24218  2.33%     -    0s\n","H    0     0                       6.1094416    6.24218  2.17%     -    0s\n","H    0     0                       6.1272244    6.24218  1.88%     -    0s\n","H    0     0                       6.1299466    6.24218  1.83%     -    0s\n","     0     1    6.24218    0    7    6.12995    6.24218  1.83%     -    0s\n","H    9     7                       6.1896912    6.23339  0.71%   2.8    0s\n","*   14     6              14       6.2126151    6.23339  0.33%   3.1    0s\n","\n","Explored 34 nodes (161 simplex iterations) in 0.25 seconds (0.00 work units)\n","Thread count was 2 (of 2 available processors)\n","\n","Solution count 8: 6.21262 6.18969 6.12995 ... 5.09553\n","\n","Optimal solution found (tolerance 1.00e-04)\n","Best objective 6.212615148522e+00, best bound 6.212615148522e+00, gap 0.0000%\n"]}]},{"cell_type":"code","source":["df2 = pd.DataFrame(data = None, index = weeks, columns = [\"price\"])\n","for w in weeks:\n","    df2.loc[w,\"price\"] = p[w].x\n","df2"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":300},"id":"p9taoNqeGtF2","executionInfo":{"status":"ok","timestamp":1695761890062,"user_tz":420,"elapsed":325,"user":{"displayName":"Marcos Geraldo","userId":"04095741566103828065"}},"outputId":"9678cf1e-0d5a-45a6-fe5f-7f869a6b3f9d"},"execution_count":15,"outputs":[{"output_type":"execute_result","data":{"text/plain":["    price\n","157  0.95\n","158  0.95\n","159  0.85\n","160  0.85\n","161  0.75\n","162   0.6\n","163   0.5\n","164   0.5"],"text/html":["\n","  <div id=\"df-6f8dbfb3-640c-4016-8478-df2b9652ea3a\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>price</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>157</th>\n","      <td>0.95</td>\n","    </tr>\n","    <tr>\n","      <th>158</th>\n","      <td>0.95</td>\n","    </tr>\n","    <tr>\n","      <th>159</th>\n","      <td>0.85</td>\n","    </tr>\n","    <tr>\n","      <th>160</th>\n","      <td>0.85</td>\n","    </tr>\n","    <tr>\n","      <th>161</th>\n","      <td>0.75</td>\n","    </tr>\n","    <tr>\n","      <th>162</th>\n","      <td>0.6</td>\n","    </tr>\n","    <tr>\n","      <th>163</th>\n","      <td>0.5</td>\n","    </tr>\n","    <tr>\n","      <th>164</th>\n","      <td>0.5</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6f8dbfb3-640c-4016-8478-df2b9652ea3a')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-6f8dbfb3-640c-4016-8478-df2b9652ea3a button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-6f8dbfb3-640c-4016-8478-df2b9652ea3a');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-fdb92eb2-c98a-462a-af12-e64a2bc59043\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-fdb92eb2-c98a-462a-af12-e64a2bc59043')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-fdb92eb2-c98a-462a-af12-e64a2bc59043 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":15}]},{"cell_type":"code","source":["fig = px.line(df2, x=df2.index, y='price', markers=True)\n","fig.update_layout(plot_bgcolor= \"white\", xaxis_title= \"week\",font_size = 20, height =800)\n","fig.update_traces(line_color= \"red\")\n","fig.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":817},"id":"bz4qguTLGtIq","executionInfo":{"status":"ok","timestamp":1695761894094,"user_tz":420,"elapsed":2021,"user":{"displayName":"Marcos Geraldo","userId":"04095741566103828065"}},"outputId":"a2f6bd10-362b-4aa4-e852-86175bea6850"},"execution_count":16,"outputs":[{"output_type":"display_data","data":{"text/html":["<html>\n","<head><meta charset=\"utf-8\" /></head>\n","<body>\n","    <div>            <script src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_SVG\"></script><script type=\"text/javascript\">if (window.MathJax && window.MathJax.Hub && window.MathJax.Hub.Config) {window.MathJax.Hub.Config({SVG: {font: \"STIX-Web\"}});}</script>                <script type=\"text/javascript\">window.PlotlyConfig = {MathJaxConfig: 'local'};</script>\n","        <script charset=\"utf-8\" src=\"https://cdn.plot.ly/plotly-2.24.1.min.js\"></script>                <div id=\"c628a802-18c8-4ac3-9f6c-209c989067ea\" class=\"plotly-graph-div\" style=\"height:800px; width:100%;\"></div>            <script type=\"text/javascript\">                                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"c628a802-18c8-4ac3-9f6c-209c989067ea\")) {                    Plotly.newPlot(                        \"c628a802-18c8-4ac3-9f6c-209c989067ea\",                        [{\"hovertemplate\":\"index=%{x}\\u003cbr\\u003eprice=%{y}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"\",\"line\":{\"color\":\"red\",\"dash\":\"solid\"},\"marker\":{\"symbol\":\"circle\"},\"mode\":\"lines+markers\",\"name\":\"\",\"orientation\":\"h\",\"showlegend\":false,\"x\":[157,158,159,160,161,162,163,164],\"xaxis\":\"x\",\"y\":[0.95,0.95,0.85,0.85,0.75,0.6,0.5,0.5],\"yaxis\":\"y\",\"type\":\"scatter\"}],                        {\"template\":{\"data\":{\"histogram2dcontour\":[{\"type\":\"histogram2dcontour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"choropleth\":[{\"type\":\"choropleth\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"histogram2d\":[{\"type\":\"histogram2d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmap\":[{\"type\":\"heatmap\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmapgl\":[{\"type\":\"heatmapgl\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"contourcarpet\":[{\"type\":\"contourcarpet\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"contour\":[{\"type\":\"contour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"surface\":[{\"type\":\"surface\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"mesh3d\":[{\"type\":\"mesh3d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"scatter\":[{\"fillpattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2},\"type\":\"scatter\"}],\"parcoords\":[{\"type\":\"parcoords\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolargl\":[{\"type\":\"scatterpolargl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"scattergeo\":[{\"type\":\"scattergeo\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolar\":[{\"type\":\"scatterpolar\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"scattergl\":[{\"type\":\"scattergl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatter3d\":[{\"type\":\"scatter3d\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattermapbox\":[{\"type\":\"scattermapbox\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterternary\":[{\"type\":\"scatterternary\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattercarpet\":[{\"type\":\"scattercarpet\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}]},\"layout\":{\"autotypenumbers\":\"strict\",\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"hovermode\":\"closest\",\"hoverlabel\":{\"align\":\"left\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"bgcolor\":\"#E5ECF6\",\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"ternary\":{\"bgcolor\":\"#E5ECF6\",\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]]},\"xaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"yaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"geo\":{\"bgcolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"subunitcolor\":\"white\",\"showland\":true,\"showlakes\":true,\"lakecolor\":\"white\"},\"title\":{\"x\":0.05},\"mapbox\":{\"style\":\"light\"}}},\"xaxis\":{\"anchor\":\"y\",\"domain\":[0.0,1.0],\"title\":{\"text\":\"week\"}},\"yaxis\":{\"anchor\":\"x\",\"domain\":[0.0,1.0],\"title\":{\"text\":\"price\"}},\"legend\":{\"tracegroupgap\":0},\"margin\":{\"t\":60},\"font\":{\"size\":20},\"plot_bgcolor\":\"white\",\"height\":800},                        {\"responsive\": true}                    ).then(function(){\n","                            \n","var gd = document.getElementById('c628a802-18c8-4ac3-9f6c-209c989067ea');\n","var x = new MutationObserver(function (mutations, observer) {{\n","        var display = window.getComputedStyle(gd).display;\n","        if (!display || display === 'none') {{\n","            console.log([gd, 'removed!']);\n","            Plotly.purge(gd);\n","            observer.disconnect();\n","        }}\n","}});\n","\n","// Listen for the removal of the full notebook cells\n","var notebookContainer = gd.closest('#notebook-container');\n","if (notebookContainer) {{\n","    x.observe(notebookContainer, {childList: true});\n","}}\n","\n","// Listen for the clearing of the current output cell\n","var outputEl = gd.closest('.output');\n","if (outputEl) {{\n","    x.observe(outputEl, {childList: true});\n","}}\n","\n","                        })                };                            </script>        </div>\n","</body>\n","</html>"]},"metadata":{}}]},{"cell_type":"markdown","source":["# Additional Analysis to determine the value of the model\n","Defined a funciton to estimate the revenue without discounts, with all discounts, mid discounts, and then a month by month optimization"],"metadata":{"id":"skArJ65dbGXf"}},{"cell_type":"code","source":["#function to determine the revenue for a set of prices given manually for a corresponding set of weeks\n","def revenue(price, weeks):\n","  intercept = 1.978242858\n","  p_coeff = -2.809634145\n","  p1_coeff = 0.963410728\n","  p2_coeff =  0.759639170\n","  season_coeff = {1: 0, 2: -0.562046910, 3: 0.087545274,  4: -0.402637480, 5: 0.004349885, 6: 0.004349885,\n","                7: -0.036102297, 8: -0.069280527, 9: 0.160276197, 10: 1.104208897, 11: 1.122711287, 12: 1.176802194, 13: 0.947945548}\n","\n","  season = {}\n","  for i in weeks:\n","    season[i] = np.ceil((i % 52) / 4 )\n","  rev = 0\n","  for w in weeks:\n","    if w-1 < weeks[0]:\n","      p1=1\n","    else:\n","      p1=price[w-1-weeks[0]]\n","    if w-2 < weeks[0]:\n","      p2= 1\n","    else:\n","      p2 = price[w-2-weeks[0]]\n","    new_rev = price[w-weeks[0]] * (intercept + p_coeff*price[w-weeks[0]] + p1_coeff*p1 + p2_coeff*p2 + season_coeff[season[w]])\n","    rev = rev +  new_rev\n","    print(\"{}\\t{}\\t{}\".format(w,price[w-weeks[0]],new_rev))\n","  return rev"],"metadata":{"id":"65ow1NHzTY8_","executionInfo":{"status":"ok","timestamp":1695762881502,"user_tz":420,"elapsed":431,"user":{"displayName":"Marcos Geraldo","userId":"04095741566103828065"}}},"execution_count":51,"outputs":[]},{"cell_type":"code","source":["# Testing the function with the optimal results, and I get the same value: 6.212\n","revenue(df2.price.values, df2.index.values)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Sv0zEmhnSHju","executionInfo":{"status":"ok","timestamp":1695764384917,"user_tz":420,"elapsed":336,"user":{"displayName":"Marcos Geraldo","userId":"04095741566103828065"}},"outputId":"5bd0da32-38ca-4038-ae79-d922916302a7"},"execution_count":97,"outputs":[{"output_type":"stream","name":"stdout","text":["157\t0.95\t0.9805333023375001\n","158\t0.95\t0.9347712927575003\n","159\t0.85\t1.0429085521725001\n","160\t0.85\t0.9610186402925002\n","161\t0.75\t0.5801720644125\n","162\t0.6\t0.6592000809000002\n","163\t0.5\t0.5795773449000001\n","164\t0.5\t0.47443387075000004\n"]},{"output_type":"execute_result","data":{"text/plain":["6.212615148522501"]},"metadata":{},"execution_count":97}]},{"cell_type":"code","source":["# Revenue without discounts\n","revenue([1,1,1,1,1,1,1,1], df2.index.values)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"M8XQNXILSlJO","executionInfo":{"status":"ok","timestamp":1695762944758,"user_tz":420,"elapsed":307,"user":{"displayName":"Marcos Geraldo","userId":"04095741566103828065"}},"outputId":"974e8281-ecb3-44cc-94b8-005a2aa015c7"},"execution_count":53,"outputs":[{"output_type":"stream","name":"stdout","text":["157\t1\t0.8916586110000001\n","158\t1\t0.8916586110000001\n","159\t1\t0.8916586110000001\n","160\t1\t0.8916586110000001\n","161\t1\t0.32961170100000015\n","162\t1\t0.32961170100000015\n","163\t1\t0.32961170100000015\n","164\t1\t0.32961170100000015\n"]},{"output_type":"execute_result","data":{"text/plain":["4.8850812480000005"]},"metadata":{},"execution_count":53}]},{"cell_type":"code","source":["# defining a simpler function to use it in iterations to determine the best price for each week.\n","def revenue2(price, weeks):\n","  intercept = 1.978242858\n","  p_coeff = -2.809634145\n","  p1_coeff = 0.963410728\n","  p2_coeff =  0.759639170\n","  season_coeff = {1: 0, 2: -0.562046910, 3: 0.087545274,  4: -0.402637480, 5: 0.004349885, 6: 0.004349885,\n","                7: -0.036102297, 8: -0.069280527, 9: 0.160276197, 10: 1.104208897, 11: 1.122711287, 12: 1.176802194, 13: 0.947945548}\n","\n","  season = {}\n","  for i in weeks:\n","    season[i] = np.ceil((i % 52) / 4 )\n","  rev = 0\n","  for w in weeks:\n","    if w-1 < weeks[0]:\n","      p1=1\n","    else:\n","      p1=price[w-1-weeks[0]]\n","    if w-2 < weeks[0]:\n","      p2= 1\n","    else:\n","      p2 = price[w-2-weeks[0]]\n","    new_rev = price[w-weeks[0]] * (intercept + p_coeff*price[w-weeks[0]] + p1_coeff*p1 + p2_coeff*p2 + season_coeff[season[w]])\n","    rev = rev +  new_rev\n","  return rev"],"metadata":{"id":"8jxyePeDZho1","executionInfo":{"status":"ok","timestamp":1695763853282,"user_tz":420,"elapsed":2,"user":{"displayName":"Marcos Geraldo","userId":"04095741566103828065"}}},"execution_count":84,"outputs":[]},{"cell_type":"markdown","source":["##Best Fix Discount"],"metadata":{"id":"MUQD9l1CtRNK"}},{"cell_type":"code","source":["# Finding the best fix price for a starting point of the week by week optimization\n","for i in [1,.95,.85,.75,.6,.5]:\n","  rev=revenue2([i,i,i,i,i,i,i,i], df2.index.values)\n","  print(\"{}\\t{}\".format(i,rev))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"BSqVa19HiTEd","executionInfo":{"status":"ok","timestamp":1695766248018,"user_tz":420,"elapsed":369,"user":{"displayName":"Marcos Geraldo","userId":"04095741566103828065"}},"outputId":"dcf2067d-6da2-4a96-f722-14b1e91eddad"},"execution_count":119,"outputs":[{"output_type":"stream","name":"stdout","text":["1\t4.8850812480000005\n","0.95\t5.17165693019\n","0.85\t5.577177848909999\n","0.75\t5.759191506750001\n","0.6\t5.613135879359999\n","0.5\t5.236381385\n"]}]},{"cell_type":"markdown","source":["##Week by Week Optimization"],"metadata":{"id":"0O5PNeDdtbw8"}},{"cell_type":"code","source":["# Best price for week 157\n","rev_matrix = pd.DataFrame(columns=['price','rev'])\n","for i in [1,.95,.85,.75,.6,.5]:\n","  rev = revenue2([i,.75,.75,.75,.75,.75,.75,.75], df2.index.values)\n","  rev_matrix = pd.concat([rev_matrix, pd.DataFrame({'price':[i],'rev':[rev]})],ignore_index=True)\n","print(rev_matrix)\n","print(\"optimum\")\n","print(rev_matrix[rev_matrix.rev == max(rev_matrix.rev)])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"YZ4E4LUydFvV","executionInfo":{"status":"ok","timestamp":1695766507902,"user_tz":420,"elapsed":297,"user":{"displayName":"Marcos Geraldo","userId":"04095741566103828065"}},"outputId":"52bf7540-f08b-4109-dec6-b150788cc080"},"execution_count":129,"outputs":[{"output_type":"stream","name":"stdout","text":["  price       rev\n","0     1  5.778372\n","1  0.95  5.802632\n","2  0.85  5.809008\n","3  0.75  5.759192\n","4   0.6  5.579105\n","5   0.5  5.388807\n","optimum\n","  price       rev\n","2  0.85  5.809008\n"]}]},{"cell_type":"code","source":["# Best price for week 158\n","rev_matrix = pd.DataFrame(columns=['price','rev'])\n","for i in [1,.95,.85,.75,.6,.5]:\n","  rev = revenue2([.85,i,.75,.75,.75,.75,.75,.75], df2.index.values)\n","  rev_matrix = pd.concat([rev_matrix, pd.DataFrame({'price':[i],'rev':[rev]})],ignore_index=True)\n","print(rev_matrix)\n","print(\"optimum\")\n","print(rev_matrix[rev_matrix.rev == max(rev_matrix.rev)])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"YR4K0hjBfSQz","executionInfo":{"status":"ok","timestamp":1695766534696,"user_tz":420,"elapsed":315,"user":{"displayName":"Marcos Geraldo","userId":"04095741566103828065"}},"outputId":"f43f6eb0-81b4-441e-b72f-c3ef631010bf"},"execution_count":130,"outputs":[{"output_type":"stream","name":"stdout","text":["  price       rev\n","0     1  5.792060\n","1  0.95  5.823546\n","2  0.85  5.844373\n","3  0.75  5.809008\n","4   0.6  5.650599\n","5   0.5  5.474752\n","optimum\n","  price       rev\n","2  0.85  5.844373\n"]}]},{"cell_type":"code","source":["# Best price for week 159\n","rev_matrix = pd.DataFrame(columns=['price','rev'])\n","for i in [1,.95,.85,.75,.6,.5]:\n","  rev = revenue2([.85,.85,i,.75,.75,.75,.75,.75], df2.index.values)\n","  rev_matrix = pd.concat([rev_matrix, pd.DataFrame({'price':[i],'rev':[rev]})],ignore_index=True)\n","print(rev_matrix)\n","print(\"optimum\")\n","print(rev_matrix[rev_matrix.rev == max(rev_matrix.rev)])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"j1Et5EU_Y6N7","executionInfo":{"status":"ok","timestamp":1695766565989,"user_tz":420,"elapsed":294,"user":{"displayName":"Marcos Geraldo","userId":"04095741566103828065"}},"outputId":"b6499db8-67e7-43c2-b0dc-dc01ea74fb26"},"execution_count":131,"outputs":[{"output_type":"stream","name":"stdout","text":["  price       rev\n","0     1  5.798939\n","1  0.95  5.836122\n","2  0.85  5.868344\n","3  0.75  5.844373\n","4   0.6  5.703056\n","5   0.5  5.538603\n","optimum\n","  price       rev\n","2  0.85  5.868344\n"]}]},{"cell_type":"code","source":["# Best price for week 160\n","rev_matrix = pd.DataFrame(columns=['price','rev'])\n","for i in [1,.95,.85,.75,.6,.5]:\n","  rev = revenue2([.85,.85,.85,i,.75,.75,.75,.75], df2.index.values)\n","  rev_matrix = pd.concat([rev_matrix, pd.DataFrame({'price':[i],'rev':[rev]})],ignore_index=True)\n","print(rev_matrix)\n","print(\"optimum\")\n","print(rev_matrix[rev_matrix.rev == max(rev_matrix.rev)])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"jMlrO5BzZT1A","executionInfo":{"status":"ok","timestamp":1695766613757,"user_tz":420,"elapsed":11,"user":{"displayName":"Marcos Geraldo","userId":"04095741566103828065"}},"outputId":"2fa221fb-3ce8-4bb5-bd7b-2938436ad66d"},"execution_count":132,"outputs":[{"output_type":"stream","name":"stdout","text":["  price       rev\n","0     1  5.822910\n","1  0.95  5.860093\n","2  0.85  5.892315\n","3  0.75  5.868344\n","4   0.6  5.727027\n","5   0.5  5.562574\n","optimum\n","  price       rev\n","2  0.85  5.892315\n"]}]},{"cell_type":"code","source":["# Best price for week 161\n","rev_matrix = pd.DataFrame(columns=['price','rev'])\n","for i in [1,.95,.85,.75,.6,.5]:\n","  rev = revenue2([.85,.85,.85,.85,i,.75,.75,.75], df2.index.values)\n","  rev_matrix = pd.concat([rev_matrix, pd.DataFrame({'price':[i],'rev':[rev]})],ignore_index=True)\n","print(rev_matrix)\n","print(\"optimum\")\n","print(rev_matrix[rev_matrix.rev == max(rev_matrix.rev)])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"K_bMqKqRaLba","executionInfo":{"status":"ok","timestamp":1695766642601,"user_tz":420,"elapsed":301,"user":{"displayName":"Marcos Geraldo","userId":"04095741566103828065"}},"outputId":"4180f1e2-cd8d-49c3-c16f-2e0e73aaa91e"},"execution_count":133,"outputs":[{"output_type":"stream","name":"stdout","text":["  price       rev\n","0     1  5.706369\n","1  0.95  5.771655\n","2  0.85  5.860081\n","3  0.75  5.892315\n","4   0.6  5.835305\n","5   0.5  5.727057\n","optimum\n","  price       rev\n","3  0.75  5.892315\n"]}]},{"cell_type":"code","source":["# Best price for week 162\n","rev_matrix = pd.DataFrame(columns=['price','rev'])\n","for i in [1,.95,.85,.75,.6,.5]:\n","  rev = revenue2([.85,.85,.85,.85,.75,i,.75,.75], df2.index.values)\n","  rev_matrix = pd.concat([rev_matrix, pd.DataFrame({'price':[i],'rev':[rev]})],ignore_index=True)\n","print(rev_matrix)\n","print(\"optimum\")\n","print(rev_matrix[rev_matrix.rev == max(rev_matrix.rev)])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"LBr_ioguaTJn","executionInfo":{"status":"ok","timestamp":1695766667035,"user_tz":420,"elapsed":314,"user":{"displayName":"Marcos Geraldo","userId":"04095741566103828065"}},"outputId":"cc27d55d-e646-4277-fad2-4d8dce8e83fc"},"execution_count":134,"outputs":[{"output_type":"stream","name":"stdout","text":["  price       rev\n","0     1  5.682284\n","1  0.95  5.752386\n","2  0.85  5.850447\n","3  0.75  5.892315\n","4   0.6  5.849756\n","5   0.5  5.751142\n","optimum\n","  price       rev\n","3  0.75  5.892315\n"]}]},{"cell_type":"code","source":["# Best price for week 163\n","rev_matrix = pd.DataFrame(columns=['price','rev'])\n","for i in [1,.95,.85,.75,.6,.5]:\n","  rev = revenue2([.85,.85,.85,.85,.75,.75,i,.75], df2.index.values)\n","  rev_matrix = pd.concat([rev_matrix, pd.DataFrame({'price':[i],'rev':[rev]})],ignore_index=True)\n","print(rev_matrix)\n","print(\"optimum\")\n","print(rev_matrix[rev_matrix.rev == max(rev_matrix.rev)])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"btvdboQ5aX3A","executionInfo":{"status":"ok","timestamp":1695766709774,"user_tz":420,"elapsed":8,"user":{"displayName":"Marcos Geraldo","userId":"04095741566103828065"}},"outputId":"62f317c8-68ca-4666-dfa2-d31d353ebc76"},"execution_count":135,"outputs":[{"output_type":"stream","name":"stdout","text":["  price       rev\n","0     1  5.520860\n","1  0.95  5.623248\n","2  0.85  5.785878\n","3  0.75  5.892315\n","4   0.6  5.946610\n","5   0.5  5.912565\n","optimum\n","  price      rev\n","4   0.6  5.94661\n"]}]},{"cell_type":"code","source":["# Best price for week 164\n","rev_matrix = pd.DataFrame(columns=['price','rev'])\n","for i in [1,.95,.85,.75,.6,.5]:\n","  rev = revenue2([.85,.85,.85,.85,.75,.75,.6,i], df2.index.values)\n","  rev_matrix = pd.concat([rev_matrix, pd.DataFrame({'price':[i],'rev':[rev]})],ignore_index=True)\n","print(rev_matrix)\n","print(\"optimum\")\n","print(rev_matrix[rev_matrix.rev == max(rev_matrix.rev)])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"wU3oI4uwacnP","executionInfo":{"status":"ok","timestamp":1695766745011,"user_tz":420,"elapsed":562,"user":{"displayName":"Marcos Geraldo","userId":"04095741566103828065"}},"outputId":"b0e0e47e-d042-4be5-9874-9eb23b03d2f4"},"execution_count":136,"outputs":[{"output_type":"stream","name":"stdout","text":["  price       rev\n","0     1  5.358388\n","1  0.95  5.504129\n","2  0.85  5.753465\n","3  0.75  5.946610\n","4   0.6  6.130965\n","5   0.5  6.183627\n","optimum\n","  price       rev\n","5   0.5  6.183627\n"]}]},{"cell_type":"code","source":["revenue([.85,.85,.85,.85,.75,.75,.6,.5], df2.index.values)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"REjxtQ1olyjq","executionInfo":{"status":"ok","timestamp":1695767035753,"user_tz":420,"elapsed":412,"user":{"displayName":"Marcos Geraldo","userId":"04095741566103828065"}},"outputId":"d31ec1d9-31d9-4732-82c2-3d79f00b1265"},"execution_count":137,"outputs":[{"output_type":"stream","name":"stdout","text":["157\t0.85\t1.1161381728375002\n","158\t0.85\t0.9933033050175002\n","159\t0.85\t0.8964493108425\n","160\t0.85\t0.8964493108425\n","161\t0.75\t0.5801720644125\n","162\t0.75\t0.5079162598125002\n","163\t0.6\t0.6136217307\n","164\t0.5\t0.5795773449000001\n"]},{"output_type":"execute_result","data":{"text/plain":["6.1836274993650004"]},"metadata":{},"execution_count":137}]},{"cell_type":"code","source":["(6.212615148522501-6.1836274993650004)/6.1836274993650004\n","\n","\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"FzWVBuZjl3tR","executionInfo":{"status":"ok","timestamp":1695767123397,"user_tz":420,"elapsed":306,"user":{"displayName":"Marcos Geraldo","userId":"04095741566103828065"}},"outputId":"e055de90-076f-44a6-e052-e0d787406f15"},"execution_count":138,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.004687806495536433"]},"metadata":{},"execution_count":138}]},{"cell_type":"code","source":["(6.212615148522501-5.759191506750001)/5.759191506750001\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"I5jV8Y1ymNFF","executionInfo":{"status":"ok","timestamp":1695769065689,"user_tz":420,"elapsed":302,"user":{"displayName":"Marcos Geraldo","userId":"04095741566103828065"}},"outputId":"a707f459-d434-4af7-fd4b-af922ecc2723"},"execution_count":139,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.0787304331243492"]},"metadata":{},"execution_count":139}]},{"cell_type":"code","source":[],"metadata":{"id":"zIAH4WmytnX0"},"execution_count":null,"outputs":[]}]}
